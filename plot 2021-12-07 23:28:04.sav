reset 

#notes:
#to kill all gnuplot processes type: pkill -9 gnuplot
#- using webgeocals improves agreement between circle of equal altitude and true position by ~ 100 m
#do not use stellarium to compute hour angle and declination: they are calculated with the reference frame sitting on the surface of the earth at the observer's location! 
#here 0 <= lambda < 360.0, and it grows in the W direction
#notes
K = 360.0/(2.0*pi);
k = 1.0/K;
N = 6.0;
#circles of equal altitude are plotted with S points
S = 1e4;
n_points_coastline = 200000;
epsilon=1e-10
myint(x) = x>0.0 ? int(x) : int(x)-1.0
clint(x) = abs(x-myint(x))<abs(x-(myint(x)+1.)) ? myint(x) : myint(x)+1.
#extracts degrees and minutes from floating-point angle in degree format
degrees(x) = floor(x);
minutes(x) = (x > 0.0 ? (x - floor(x))*60.0 : (1.0 - (x - floor(x)))*60.0)
is_int(x) = ((( abs(x - floor(x)) < epsilon ) || ( abs(x - ceil(x)) < epsilon)) ? 1 : 0)
key_y = 0.98;
key_x = 0.07;
key_spacing = 0.04;


#Mercator for the sphere
#MINUS SIGN ADDED BY HAND TO FLIP THE MAP
xe(lambda) =  (-1.0) * ( ((0.0 <= lambda) & (lambda < 180.0)) ? lambda: lambda - 360.0 )*k
ye(phi) = (log(1./cos(phi*k) + tan(phi*k)))
lambda_inv(xe) = ( ((xe <= 0.0) & (xe > -pi)) ? -xe*K: -xe*K + 360.0 )
#given xe, this returns the corresponding lambda in non-standard format, i.e., lying in the interval [-pi, pi)
lambda_inv_pm(xe) = -xe*K 
phi_inv(ye) = K*atan(sinh(ye))	

myf(x,y)=sprintf("%g\260 %g' %s , %g\260 %g' %s", myint(abs(phi_inv(y))), (abs(phi_inv(y)) - myint(abs(phi_inv(y))))*60.0, (phi_inv(y) > 0.0 ? 'N': 'S'), myint(abs(lambda_inv_pm(x))), (abs(lambda_inv_pm(x)) - myint(abs(lambda_inv_pm(x))))*60.0, ((lambda_inv_pm(x) > 0.0) ? 'W': 'E'))
set mouse mouseformat function myf(x, y)
set mouse mouseformat 8


#clear
set parametric
set multiplot

set size ratio -1
set key top left
#size of minor x and y tics with respect to screen size (1 = tic as long as screen size)
mtics_size = 0.01
set xtics rotate by 45 offset 0,graph -0.09

set format x "";     
set xtics ();

set format y "";     
set ytics ();

set ticscale 3,1
set samples S
#increments in degrees
increment_phi = 20.0;
increment_lambda = 60.0;
list(start,end,increment)=system(sprintf("seq %g %g %g", start, increment, end))


#set tics scale 0

#latitude and longitude for a circle of equal altitude whose ground position has coordinates d, GHA, and whose angular aperture is omega
phi_cea(t, d, GHA, omega) =pi/2.-acos(cos(omega) * sin(d)-cos(d) * cos(t) * sin(omega))
lambda_cea(t, d, GHA, omega) = ( lambda = -(atan((-sin(GHA) * (cos(d)* cos(omega)+cos(t) * sin(d) * sin(omega))+cos(GHA) * sin(omega) * sin(t))/(cos(d) * cos(GHA) * cos(omega)+sin(omega)*  (cos(GHA) * cos(t) * sin(d)+sin(GHA)* sin(t)))) + (cos(d)* cos(GHA)* cos(omega) +  sin(omega) * (cos(GHA)* cos(t) * sin(d) + sin(GHA)  *sin(t)) >0.0 ? 0.0 : pi)) , lambda - 2.0*pi*floor(lambda/(2.0*pi)))

#latitude and longitude for an orthodrome whose starting point has coordinates d, GHA and whose initial heading is a
phi_lox(l, d, GHA, a, Re) = ( ( (( (0.0 <= a) && (a < pi/2.0) ) || ( (3.0*pi/2.0 <= a) && (a < 2.0*pi) )) ? tau = 1 : tau =-1 ), ( ((0.0 <= a) && (a < pi)) ? sigma = -1 : sigma = 1 ), C = (cos(a))**2.0, t = -tau*sqrt((1.0-C)/C) * log( sqrt((1.0+sin(d))/(1.0-sin(d))) * tan( -tau*sqrt(C)*l/(2.0*Re) + atan(sqrt((1.0-sin(d))/(1.0+sin(d)))) ) ), asin( tanh( tau*sqrt(C/(1.0-C))*t + atanh(sin(d)) ) ) )

lambda_lox(l, d, GHA, a, Re) = ( ( (( (0.0 <= a) && (a < pi/2.0) ) || ( (3.0*pi/2.0 <= a) && (a < 2.0*pi) )) ? tau = 1 : tau =-1 ), ( ((0.0 <= a) && (a < pi)) ? sigma = -1 : sigma = 1 ), C = (cos(a))**2.0, t = -tau*sqrt((1.0-C)/C) * log( sqrt((1.0+sin(d))/(1.0-sin(d))) * tan( -tau*sqrt(C)*l/(2.0*Re) + atan(sqrt((1.0-sin(d))/(1.0+sin(d)))) ) ), lambda = GHA + sigma*t, lambda - 2.0*pi*floor(lambda/(2.0*pi)) )


#latitude and longitude for an orthodrome whose starting point has coordinates d, GHA and whose initial heading is a
phi_ort(l, d, GHA, a, Re) = asin(cos(a) * cos(d) * sin(l/Re) + cos(l/Re) * sin(d))
lambda_ort(l, d, GHA, a, Re) = (lambda = - (atan((cos(GHA) * sin(l/Re) * sin(a) + sin(GHA) * (-cos(l/Re) * cos(d) +  cos(a) * sin(l/Re) * sin(d)))/( cos(l/Re) * cos(GHA) * cos(d) +  sin(l/Re) * (sin(a) * sin(GHA) -  cos(a) * cos(GHA) * sin(d)))) + ( ( cos(l/Re) * cos(GHA) * cos(d) + sin(l/Re) * (sin(a) * sin(GHA) - cos(a) * cos(GHA) * sin(d)) ) >= 0.0 ? 0.0 : pi ) ), lambda - 2.0*pi*floor(lambda/(2.0*pi)))

#angles are in degrees
#lambda_min is the angle which corresponds to the leftmost x coordinate x_min in the Mercator plot, and simiarly for lambda_max
lambda_min = 170.1999999999999886313162278384;
lambda_max = 190;
phi_min = 310.76666666666665150842163711786;
phi_max = 80.883333333333339965065533760935;

set xrange [xe(lambda_min):xe(lambda_max)]
set yrange [ye(phi_min):ye(phi_max)]

dx = ye((phi_min+phi_max)/2.0+1./60.) -  ye((phi_min+phi_max)/2.0)

set style arrow 1 nohead ls 1 lw 1 linecolor rgb 'black'
set style arrow 2 nohead ls 1 lw 1 linecolor rgb 'gray'


label_rose(n) = sprintf("\\scalebox{0.3}{$\\color{mygray}{%d}$}",n)
label_deg_latitude(x) = ( x == 0.0 ) ? sprintf("0\260") : ( x > 0.0 ? sprintf("%.f\260 N", x - myint(x/360.0)*360.0) : sprintf("%.f\260 S", ((-x) - myint((-x)/360.0)*360.0)) )
label_deg_longitude(x) = ( x == 0.0 ) ? sprintf("0\260") : ( x < 180.0 ? sprintf("%.f\260 W", x - myint(x/360.0)*360.0) : sprintf("%.f\260 E", 360.0 - (x - myint(x/360.0)*360.0)) )
#this prints the arcminutes only of angle x
label_min(x) = sprintf("%.f'", minutes(x) ) 
#if the arcminutes are zero, I print out only the degrees for clarity
label_deg_min(x) =  ( minutes(x) == 0.0 ? sprintf("%.f\260", degrees(x)) : sprintf("%.f\260 %.f'", degrees(x), minutes(x)) )
#this function outputs angle x in the format which can be read from file from lib.h 
label_deg_min_c_lib(x) = sprintf("%.fÂ° %.f'", degrees(x), minutes(x))


#GPS position
#lambda0 = 360.0 -(2.0 + 24./60. + 26.07/(60.**2.))
#phi0 = 48.0 + 51./60. + 19.63/(60.**2.)
#set object circle at  xe(lambda0),ye(phi0) radius char 1  fillcolor rgb 'red' fillstyle solid noborder

#coastlines
#	plot   '/Users/mcastellana/Documents/navigational_astronomy_large_files/coastlines_2/map_conv_selected.txt' u (xe($2)):(ye($1)) w d linecolor rgb "gray" noti
p 0,0 w l noti

#unset parametric
unset multiplot

x_max_old = 0.0;

while(1){

	if(GPVAL_X_MAX!=x_max_old){


	unset arrow;
	set bmargin 6;
	

	#print "Recalculating tics ... ";

	lambda_min = lambda_inv(GPVAL_X_MIN);
	lambda_max = lambda_inv(GPVAL_X_MAX);
	
	phi_min = phi_inv(GPVAL_Y_MIN);
	phi_max = phi_inv(GPVAL_Y_MAX);

	set xrange [xe(lambda_min):xe(lambda_max)]
	set yrange [ye(phi_min):ye(phi_max)]

	phi_span = phi_max - phi_min;
	lambda_span = -(-(GPVAL_X_MAX - GPVAL_X_MIN)*K);
	
	#print "lambda in [" , lambda_min , " , " , lambda_max , "]";
	#print "phi in [" , phi_min , " , " , phi_max , "]";

	#print "x in [" , GPVAL_X_MIN , " , " , GPVAL_X_MAX , "]";
	#print "y in [" , GPVAL_Y_MIN , " , " , GPVAL_Y_MAX , "]";


	#print "Determining dlambda ...";

	#gamma_lambda is the compression factor which allows from switching from increments in degrees to increments in arcminutes
	if(lambda_span > 1.0){gamma_lambda = 1.0;}
	else{gamma_lambda = 60.0;}

	dlambda=1.0/gamma_lambda;
	while(N*dlambda<lambda_span){
	#print dlambda;
	if(dlambda == 1.0/gamma_lambda){dlambda = dlambda + 4.0/gamma_lambda;}
	else{dlambda = dlambda + 5.0/gamma_lambda;}
	}
	if(dlambda > 1.0/gamma_lambda){
		   if(dlambda == 5.0/gamma_lambda){dlambda = dlambda - 4.0/gamma_lambda;}
		   else{dlambda = dlambda - 5.0/gamma_lambda;}
	}
	#print "... dlambda = " , dlambda;


	#print "Determining dphi ...";
	#print "phi_span = ", phi_span;

	#gamma_phi is the compression factor which allows from switching from increments in degrees to increments in arcminutes
	if(phi_span > 1.0){gamma_phi = 1.0;}
	else{gamma_phi = 60.0;}
	
	dphi=1.0/gamma_phi;
	while(N*dphi<phi_span){
		#print dphi;
		if(dphi == 1.0/gamma_phi){dphi = dphi + 4.0/gamma_phi;}
		else{dphi = dphi + 5.0/gamma_phi;}
	}
	if(dphi > 1.0/gamma_phi){
		   if(dphi == 5.0/gamma_phi){dphi = dphi - 4.0/gamma_phi;}
		   else{dphi = dphi - 5.0/gamma_phi;}
	}
	#print "... dphi = " , dphi;



	#print "Setting xtics at dlambda intervals:";

	set format x "";     
	set xtics ();

	lambda= (int(lambda_min/dlambda))*dlambda;
	x = xe(lambda);

	#plot the first few custom-made myxics close to the left edge of the x axis. Here I consider 		x = x + dlambda*k (the first value of x which is an 'integer multiple of dlambda' and which is contained in the x axis), and then decrease it by one tenth of arcminute in the while loop
	if(gamma_lambda == 60.0){
					i=0.0;
					while(x + (dlambda + (i/10.0)*1.0/60.0)*k >= GPVAL_X_MIN){
				             #set custom-made minor xtics every tenths (i/10.0) of arcminutes (1.0/60.0) 
					     set arrow from first x + (dlambda + (i/10.0)*1.0/60.0)*k, graph 0 to first x + (dlambda + (i/10.0)*1.0/60.0)*k, graph mtics_size nohead  linecolor "blue";
					     i=i-1.0;
					}
			 	   
	}


	while(x <= GPVAL_X_MAX){
 
		lambda = lambda_inv(x);

		if(x >= GPVAL_X_MIN){

		          if(is_int(lambda) == 1){
		       		      set xtics add (label_deg_longitude(lambda) x);
		          }else{
		       		      set xtics add (label_min(lambda) x);
		          }

			  if(gamma_lambda == 60.0){
			  	   i=0.0;
				   #plot the custom-made xtics from x to the next x (x + dlambda*k)
				   while(x + (i/10.0)*1.0/60.0*k <  x + dlambda*k){
					if(x + (i/10.0)*1.0/60.0*k <= GPVAL_X_MAX){
					     #set custom-made minor xtics every tenths (i/10.0) of arcminutes (1.0/60.0) 
					     set arrow from first x + (i/10.0)*1.0/60.0*k, graph 0 to first x + (i/10.0)*1.0/60.0*k, graph mtics_size nohead  linecolor "blue";
					}
					i=i+1.0;
			 	   }
		          }


			  set arrow from first x, graph 0 to first x, graph 1 nohead  linecolor "gray";


		}

		
		#print lambda_inv(x);
		x = x + dlambda*k;
		#lambda = lambda + dlambda;

	}




 
	#if(dlambda == 1.0){
	#	print "Setting mxtics";
	#	set mxtics 60;
	#	show mxtics;
	#}


	#print "Setting ytics at dphi intervals:";
	
	set format y "";     
	set ytics ();
	phi = (int(phi_min/dphi))*dphi;

	#plot the first few custom-made mytics close to the lower edge of the y axis. Here I consider phi + dphi (the first value of phi which is an 'integer multiple of dphi' and which is contained in the y axis), and then decrease it by one tenth of arcminute in the while loop
	if(gamma_phi == 60.0){
					i=0.0;
					while(ye(phi + dphi + (i/10.0)*1.0/60.0) >= GPVAL_Y_MIN){
						  #set custom-made minor ytics every tenths (i/10.0) of arcminutes (1.0/60.0) 
		       	 		       	  set arrow from graph 0,first ye(phi + dphi + (i/10.0)*1.0/60.0) to graph mtics_size, first ye(phi + dphi + (i/10.0)*1.0/60.0) nohead  linecolor "blue";
					i=i-1.0;
					}
			 	   
	}

	while(phi<=phi_max){
		if(phi >= phi_min){
		       if(is_int(phi) == 1){
		       		      set ytics add (label_deg_latitude(phi) ye(phi));
		       }else{
		       		      set ytics add (label_min(phi) ye(phi));
		       }

		       if(gamma_phi == 60.0){
			  	   i=0.0;
				   #plot the custom-made ytics from phi to the next phi (phi + dphi)
			 	   while(phi + (i/10.0)*1.0/60.0 < phi + dphi){
					if(phi + (i/10.0)*1.0/60.0 <= phi_max){
						#set custom-made minor ytics every tenths (i/10.0) of arcminutes (1.0/60.0) 
		       	 		       set arrow from graph 0,first ye(phi + (i/10.0)*1.0/60.0) to graph mtics_size, first ye(phi + (i/10.0)*1.0/60.0) nohead  linecolor "blue";
					}
					i=i+1.0;
			 	   }
		       }

		       set arrow from graph 0,first ye(phi) to graph 1, first ye(phi) nohead  linecolor "gray";
		}
		#print phi;
		phi = phi + dphi;


	}


	clear;

	set multiplot	
	#coastlines
	#set the values lambda_min_get_coastline_data,  lambda_max_get_coastline_data which I will feed into get_coastline_data.cpp
	if((lambda_min < 180.0) && (lambda_max >= 180.0)){
		lambda_min_get_coastline_data = lambda_max - 360.0;
		lambda_max_get_coastline_data = lambda_min;
	}else{
		lambda_min_get_coastline_data = lambda_max;
		lambda_max_get_coastline_data = lambda_min;
	}

	#fetch coastline data in path_file_coastline_data_blocked, and produce file path_file_selected_coastline_data which contains n_points_coastline points of the coastline of the world
	system(sprintf("./get_coastline_data.o -p %g -P %g -l %g -L %g -N %g > /dev/null 2>&1", floor(phi_min), floor(phi_max), floor(lambda_min_get_coastline_data), floor(lambda_max_get_coastline_data), n_points_coastline));

	plot   '/Users/mcastellana/Documents/navigational_astronomy_large_files/coastlines_2/map_conv_selected.txt' u (xe($2)):(ye($1)) w d linecolor rgb "black" noti

	
 set key at graph key_x, graph key_y - 14*key_spacing
plot "+" u (xe(K*(6.2410583415053171307818047353067))):(ye(K*(0.85264552071863697335629694862291))) w p lw 2 lt 1 ti "Centre Sportif Maryse Hilsz (MH)"

 set key at graph key_x, graph key_y - 15*key_spacing
plot "+" u (xe(K*(6.241171014205057154811129294103))):(ye(K*(0.85268850862179457195111353939865))) w p lw 2 lt 2 ti "Baby Gym Campo (BGC)"

 set key at graph key_x, graph key_y - 16*key_spacing
plot "+" u (xe(K*(6.2411274295520877686271887796465))):(ye(K*(0.8526832726340385359975471146754))) w p lw 2 lt 3 ti "My Place (MP)"

 set key at graph key_x, graph key_y - 17*key_spacing
plot "+" u (xe(K*(6.2304573770340470062478743784595))):(ye(K*(0.85075457049861902270038171991473))) w p lw 2 lt 4 ti "position transported"

 set key at graph key_x, graph key_y - 18*key_spacing
plot "+" u (xe(K*(5.6197796172146023963023253600113))):(ye(K*(4.9244751858369095742773424717598))) w p lw 2 lt 5 ti "position transported"

 set key at graph key_x, graph key_y - 19*key_spacing
plot "+" u (xe(K*(6.2421974846703820460902534250636))):(ye(K*(0.85207213738669762559396758661023))) w p lw 2 lt 6 ti "position transported"

 set key at graph key_x, graph key_y - 20*key_spacing
plot "+" u (xe(K*(1.3506112506281851004530381032964))):(ye(K*(5.6849332309804019303101085824892))) w p lw 2 lt 7 ti "position transported"

 set key at graph key_x, graph key_y - 21*key_spacing
plot "+" u (xe(K*(6.239919873518503301568216556916))):(ye(K*(0.85182440354923671943510044002323))) w p lw 2 lt 8 ti "position transported"

 set key at graph key_x, graph key_y - 22*key_spacing
plot "+" u (xe(K*(5.1536403946555022770326104364358))):(ye(K*(5.5904422949497059036616519733798))) w p lw 2 lt 9 ti "position transported"

 set key at graph key_x, graph key_y - 23*key_spacing
plot "+" u (xe(K*(6.241295940379459672442408191273))):(ye(K*(0.85197452941863105468911498974194))) w p lw 2 lt 10 ti "position transported"

 set key at graph key_x, graph key_y - 24*key_spacing
plot "+" u (xe(K*(5.1531938914752331015733943786472))):(ye(K*(5.5535984567989142846045069745742))) w p lw 2 lt 11 ti "position transported"

 set key at graph key_x, graph key_y - 25*key_spacing
plot "+" u (xe(K*(6.2408823196866212157374320668168))):(ye(K*(0.85192954947504440088579258372192))) w p lw 2 lt 12 ti "position transported"

 set key at graph key_x, graph key_y - 26*key_spacing
plot "+" u (xe(K*(5.1532561559839296094764904410113))):(ye(K*(5.5660898759049075579241616651416))) w p lw 2 lt 13 ti "position transported"

 set key at graph key_x, graph key_y - 27*key_spacing
plot "+" u (xe(K*(6.2432650475199844564144768810365))):(ye(K*(0.85218695407852451673136329191038))) w p lw 2 lt 14 ti "position transported"

 set key at graph key_x, graph key_y - 28*key_spacing
plot "+" u (xe(K*(0.9860301171249546969832522336219))):(ye(K*(4.9511987540697113274745788658038))) w p lw 2 lt 15 ti "position transported"

 set key at graph key_x, graph key_y - 29*key_spacing
plot "+" u (xe(K*(6.2430324799807959124109402182512))):(ye(K*(0.85216201207681507856506186726619))) w p lw 2 lt 16 ti "position transported"

 set key at graph key_x, graph key_y - 30*key_spacing
plot "+" u (xe(K*(6.1112902589427067212568545073736))):(ye(K*(4.8663182574193193374867405509576))) w p lw 2 lt 17 ti "position transported"

 set key at graph key_x, graph key_y - 31*key_spacing
plot "+" u (xe(K*(6.2429908302189067725862514635082))):(ye(K*(0.85215754113756025933668070138083))) w p lw 2 lt 18 ti "position transported"

 set key at graph key_x, graph key_y - 32*key_spacing
plot "+" u (xe(K*(6.0493982246561666116235755907837))):(ye(K*(4.8696483218442079277110678958707))) w p lw 2 lt 19 ti "position transported"

 set key at graph key_x, graph key_y - 33*key_spacing
plot "+" u (xe(K*(6.2443908290452752041232997726183))):(ye(K*(0.8523071334716316727053708746098))) w p lw 2 lt 20 ti "position transported"

 set key at graph key_x, graph key_y - 34*key_spacing
plot "+" u (xe(K*(5.351744316675414836481650127098))):(ye(K*(5.0332126618501584758291755861137))) w p lw 2 lt 21 ti "position transported"

 set key at graph key_x, graph key_y - 35*key_spacing
plot "+" u (xe(K*(6.2446095271465846821001832722686))):(ye(K*(0.85233037296476632516117888371809))) w p lw 2 lt 22 ti "position transported"

 set key at graph key_x, graph key_y - 36*key_spacing
plot "+" u (xe(K*(5.287383576713899913102068239823))):(ye(K*(5.0889922610253819357239990495145))) w p lw 2 lt 23 ti "position transported"

 set key at graph key_x, graph key_y - 37*key_spacing
plot "+" u (xe(K*(6.2403303299149337490803191030864))):(ye(K*(0.85186932798692460711009744045441))) w p lw 2 lt 24 ti "position transported"

 set key at graph key_x, graph key_y - 38*key_spacing
plot "+" u (xe(K*(5.2632685990680201371105795260519))):(ye(K*(6.2522795491309466342499945312738))) w p lw 2 lt 25 ti "position transported"

 set key at graph key_x, graph key_y - 39*key_spacing
plot "+" u (xe(K*(6.2399047342442433006226565339603))):(ye(K*(0.85182274420555714744551778494497))) w p lw 2 lt 26 ti "position transported"

 set key at graph key_x, graph key_y - 40*key_spacing
plot "+" u (xe(K*(1.3395005325942330731692209155881))):(ye(K*(5.8011118020126115624179874430411))) w p lw 2 lt 27 ti "position transported"

 set key at graph key_x, graph key_y - 41*key_spacing
plot "+" u (xe(K*(6.242294029719087866681093146326))):(ye(K*(0.85245689659923817860232020393596))) w p lw 2 lt 28 ti "position transported"

 set key at graph key_x, graph key_y - 42*key_spacing
plot "+" u (xe(K*(1.4016593123289571298784039754537))):(ye(K*(5.7035711345874071653838655038271))) w p lw 2 lt 29 ti "position transported"

 set key at graph key_x, graph key_y - 43*key_spacing
plot "+" u (xe(K*(6.2399527169746473731493097147904))):(ye(K*(0.85212852415408213424541372660315))) w p lw 2 lt 30 ti "position transported"

 set key at graph key_x, graph key_y - 44*key_spacing
plot "+" u (xe(K*(5.1893897584325374694458332669456))):(ye(K*(5.5971074026961682434944123087917))) w p lw 2 lt 31 ti "position transported"

 set key at graph key_x, graph key_y - 45*key_spacing
plot "+" u (xe(K*(6.2413056569133242845737186144106))):(ye(K*(0.8523187765057134157586915534921))) w p lw 2 lt 32 ti "position transported"

 set key at graph key_x, graph key_y - 46*key_spacing
plot "+" u (xe(K*(5.1884777530472145912199266604148))):(ye(K*(5.5589370435763463262901495909318))) w p lw 2 lt 33 ti "position transported"

 set key at graph key_x, graph key_y - 47*key_spacing
plot "+" u (xe(K*(6.2408829713793645410646604432259))):(ye(K*(0.85225948512556237712800566441729))) w p lw 2 lt 34 ti "position transported"

 set key at graph key_x, graph key_y - 48*key_spacing
plot "+" u (xe(K*(5.1886766105954809091826973599382))):(ye(K*(5.5708886761444631474660127423704))) w p lw 2 lt 35 ti "position transported"

 set key at graph key_x, graph key_y - 49*key_spacing
plot "+" u (xe(K*(6.2422539835833612542614901030902))):(ye(K*(0.85245131456157163807318966064486))) w p lw 2 lt 36 ti "position transported"

 set key at graph key_x, graph key_y - 50*key_spacing
plot "+" u (xe(K*(0.97376134330580166320601165352855))):(ye(K*(4.9234843291142933452420038520359))) w p lw 2 lt 37 ti "position transported"

 set key at graph key_x, graph key_y - 51*key_spacing
plot "+" u (xe(K*(6.2424476702509812398034227953758))):(ye(K*(0.85247830145061442852494337785174))) w p lw 2 lt 38 ti "position transported"

 set key at graph key_x, graph key_y - 52*key_spacing
plot "+" u (xe(K*(6.0756604202458044383661217580084))):(ye(K*(4.8631514270439115676936125964858))) w p lw 2 lt 39 ti "position transported"

 set key at graph key_x, graph key_y - 53*key_spacing
plot "+" u (xe(K*(6.2423876885024851546290847181808))):(ye(K*(0.85246994702986778058573236194206))) w p lw 2 lt 40 ti "position transported"

 set key at graph key_x, graph key_y - 54*key_spacing
plot "+" u (xe(K*(6.0159492071150237890719836286735))):(ye(K*(4.8671751255506752187329766456969))) w p lw 2 lt 41 ti "position transported"

 set key at graph key_x, graph key_y - 55*key_spacing
plot "+" u (xe(K*(6.2423841164621469701501155213919))):(ye(K*(0.85246944942150304491690349095734))) w p lw 2 lt 42 ti "position transported"

 set key at graph key_x, graph key_y - 56*key_spacing
plot "+" u (xe(K*(5.3907942437860434381491359090433))):(ye(K*(5.0196327874483213093981248675846))) w p lw 2 lt 43 ti "position transported"

 set key at graph key_x, graph key_y - 57*key_spacing
plot "+" u (xe(K*(6.2422162038950004259163506503683))):(ye(K*(0.85244604734476725482750225637574))) w p lw 2 lt 44 ti "position transported"

 set key at graph key_x, graph key_y - 58*key_spacing
plot "+" u (xe(K*(5.3361670638769567176495911553502))):(ye(K*(5.0634428027679287964701870805584))) w p lw 2 lt 45 ti "position transported"

 set key at graph key_x, graph key_y - 59*key_spacing
plot "+" u (xe(K*(6.240936646260852427303689182736))):(ye(K*(0.85226702167956858158248678591917))) w p lw 2 lt 46 ti "position transported"

 set key at graph key_x, graph key_y - 60*key_spacing
plot "+" u (xe(K*(5.3135400431723560643604287179187))):(ye(K*(0.0088847122375890208445525786373764))) w p lw 2 lt 47 ti "position transported"

 set key at graph key_x, graph key_y - 61*key_spacing
plot "+" u (xe(K*(6.2410186012476369654677910148166))):(ye(K*(0.85227852491467992468443526377087))) w p lw 2 lt 48 ti "position transported"

 set key at graph key_x, graph key_y - 62*key_spacing
plot "+" u (xe(K*(1.3727455879988099685107272307505))):(ye(K*(5.9274797817008204603439480706584))) w p lw 2 lt 49 ti "position transported"

 set key at graph key_x, graph key_y - 63*key_spacing
plot "+" u (xe(K*(6.2378920338895884611929432139732))):(ye(K*(0.83383685789296546619908667707932))) w p lw 2 lt 50 ti "position transported"

 set key at graph key_x, graph key_y - 64*key_spacing
plot "+" u (xe(K*(6.2208980612342550386983930366114))):(ye(K*(0.71601704349799699667045160822454))) w p lw 2 lt 51 ti "position transported"

 set key at graph key_x, graph key_y - 65*key_spacing
plot "+" u (xe(K*(6.2411758541175785808263754006475))):(ye(K*(0.84794034041655097500012061573216))) w p lw 2 lt 52 ti "position transported"

 set key at graph key_x, graph key_y - 66*key_spacing
plot "+" u (xe(K*(6.2179962618811437380372808547691))):(ye(K*(0.61199315347535110376497868855949))) w p lw 2 lt 53 ti "position transported"

 set key at graph key_x, graph key_y - 67*key_spacing
plot "+" u (xe(K*(6.2408601120401385742297861725092))):(ye(K*(0.84664040386504901825048818864161))) w p lw 2 lt 54 ti "position transported"

 set key at graph key_x, graph key_y - 68*key_spacing
plot "+" u (xe(K*(6.2185778941016858212265105976257))):(ye(K*(0.58907015273866680793446448660688))) w p lw 2 lt 55 ti "position transported"

 set key at graph key_x, graph key_y - 69*key_spacing
plot "+" u (xe(K*(6.2422902489732461361882087658159))):(ye(K*(0.85244184735431305366404330925434))) w p lw 2 lt 56 ti "position transported"

 set key at graph key_x, graph key_y - 70*key_spacing
plot "+" u (xe(K*(0.9518455110712537026174118182098))):(ye(K*(5.6330759243782617673446111439262))) w p lw 2 lt 57 ti "position transported"

 set key at graph key_x, graph key_y - 71*key_spacing
plot "+" u (xe(K*(6.2423171338407161812256163102575))):(ye(K*(0.85254883050601026894810274825431))) w p lw 2 lt 58 ti "position transported"

 set key at graph key_x, graph key_y - 72*key_spacing
plot "+" u (xe(K*(0.59320367612922286770782420717296))):(ye(K*(5.7174032337479649967804107291158))) w p lw 2 lt 59 ti "position transported"

 set key at graph key_x, graph key_y - 73*key_spacing
plot "+" u (xe(K*(6.2423077088723477601206468534656))):(ye(K*(0.85251133412560275992575498094084))) w p lw 2 lt 60 ti "position transported"

 set key at graph key_x, graph key_y - 74*key_spacing
plot "+" u (xe(K*(0.60478797127504602126890631552669))):(ye(K*(5.7123830641441593058971193386242))) w p lw 2 lt 61 ti "position transported"

 set key at graph key_x, graph key_y - 75*key_spacing
plot "+" u (xe(K*(6.2422988990978325318792485632002))):(ye(K*(0.85247627697508887578692338138353))) w p lw 2 lt 62 ti "position transported"

 set key at graph key_x, graph key_y - 76*key_spacing
plot "+" u (xe(K*(1.0167125487697969976608192155254))):(ye(K*(5.6313384266378720965917636931408))) w p lw 2 lt 63 ti "position transported"

 set key at graph key_x, graph key_y - 77*key_spacing
plot "+" u (xe(K*(6.2422904185919412256566829455551))):(ye(K*(0.85244252255244135074718769828905))) w p lw 2 lt 64 ti "position transported"

 set key at graph key_x, graph key_y - 78*key_spacing
plot "+" u (xe(K*(1.0583205660198629072255016581039))):(ye(K*(5.6322237832179276040278637083247))) w p lw 2 lt 65 ti "position transported"

 set key at graph key_x, graph key_y - 79*key_spacing
plot "+" u (xe(K*(1.9737316899568888572957803262398))):(ye(K*(1.0510878598487232160607618425274))) w p lw 2 lt 66 ti "position transported"

 set key at graph key_x, graph key_y - 80*key_spacing
plot "+" u (xe(K*(6.2425049196857074207400728482753))):(ye(K*(0.8532940225326731686905645801744))) w p lw 2 lt 67 ti "position transported"

 set key at graph key_x, graph key_y - 81*key_spacing
plot "+" u (xe(K*(6.2423897125016916120898713415954))):(ye(K*(0.85283727254597629929833146888996))) w p lw 2 lt 68 ti "position transported"

 set key at graph key_x, graph key_y - 82*key_spacing
plot "+" u (xe(K*(1.2810577352099192793843940307852))):(ye(K*(5.6644752812661227636681360309012))) w p lw 2 lt 69 ti "position transported"

 set key at graph key_x, graph key_y - 83*key_spacing
plot "+" u (xe(K*(6.2416696515763776531571238592733))):(ye(K*(0.86872291463500639352446341945324))) w p lw 2 lt 70 ti "position transported"

 set key at graph key_x, graph key_y - 84*key_spacing
plot "+" u (xe(K*(4.2452523935421035972126446722541))):(ye(K*(5.8027136264217551442357034829911))) w p lw 2 lt 71 ti "position transported"

 set key at graph key_x, graph key_y - 85*key_spacing
plot "+" u (xe(K*(6.240869331625442661959368706448))):(ye(K*(0.86080813816789458758904629576136))) w p lw 2 lt 72 ti "position transported"

 set key at graph key_x, graph key_y - 86*key_spacing
plot "+" u (xe(K*(4.6739842960308086716736397647765))):(ye(K*(5.6018518829204602127447287784889))) w p lw 2 lt 73 ti "position transported"

 set key at graph key_x, graph key_y - 87*key_spacing
plot "+" u (xe(K*(6.2400492239404377059486250800546))):(ye(K*(0.85302477930148723483938510980806))) w p lw 2 lt 74 ti "position transported"

 set key at graph key_x, graph key_y - 88*key_spacing
plot "+" u (xe(K*(4.5064140417517926096024893922731))):(ye(K*(5.6528903736985256500702234916389))) w p lw 2 lt 75 ti "position transported"

 set key at graph key_x, graph key_y - 89*key_spacing
plot "+" u (xe(K*(6.2401248101759776432118087541312))):(ye(K*(0.85372951554365639204036142473342))) w p lw 2 lt 76 ti "position transported"

 set key at graph key_x, graph key_y - 90*key_spacing
plot "+" u (xe(K*(4.2981554755810051915432268287987))):(ye(K*(5.7635848995689977769529832585249))) w p lw 2 lt 77 ti "position transported"

 set key at graph key_x, graph key_y - 91*key_spacing
plot "+" u (xe(K*(6.2401154560979970042922104767058))):(ye(K*(0.85364216865804132261530412506545))) w p lw 2 lt 78 ti "position transported"

 set key at graph key_x, graph key_y - 92*key_spacing
plot "+" u (xe(K*(4.3299255207422566726904733513948))):(ye(K*(5.7425153335946479415952126146294))) w p lw 2 lt 79 ti "position transported"

 set key at graph key_x, graph key_y - 93*key_spacing
plot "+" u (xe(K*(6.2400097478456109101330184785184))):(ye(K*(0.8526576903266144258353165241715))) w p lw 2 lt 80 ti "position transported"

 set key at graph key_x, graph key_y - 94*key_spacing
plot "+" u (xe(K*(4.9658844436259315102688560727984))):(ye(K*(5.5729261004960584102718712529168))) w p lw 2 lt 81 ti "position transported"

 set key at graph key_x, graph key_y - 95*key_spacing
plot "+" u (xe(K*(6.2399981060607014882180010317825))):(ye(K*(0.85254955941969401411739681861945))) w p lw 2 lt 82 ti "position transported"

 set key at graph key_x, graph key_y - 96*key_spacing
plot "+" u (xe(K*(5.0147415372873975769607568508945))):(ye(K*(5.5747504742402433919323812006041))) w p lw 2 lt 83 ti "position transported"

 set key at graph key_x, graph key_y - 97*key_spacing
plot "+" u (xe(K*(6.2398937403040006799415095883887))):(ye(K*(0.85158273969411335535539819829864))) w p lw 2 lt 84 ti "position transported"

 set key at graph key_x, graph key_y - 98*key_spacing
plot "+" u (xe(K*(4.1160229244733681497336874599569))):(ye(K*(5.9238659565249083271964991581626))) w p lw 2 lt 85 ti "position transported"

 set key at graph key_x, graph key_y - 99*key_spacing
plot "+" u (xe(K*(6.2399203876740703123005005181767))):(ye(K*(0.85182916099955274802368876407854))) w p lw 2 lt 86 ti "position transported"

 set key at graph key_x, graph key_y - 100*key_spacing
plot "+" u (xe(K*(5.7429933752516708622692931385245))):(ye(K*(5.8954128997595640626627755409572))) w p lw 2 lt 87 ti "position transported"

 set key at graph key_x, graph key_y - 101*key_spacing
plot "+" u (xe(K*(6.2407467348822986963341463706456))):(ye(K*(0.83580442753158445956529476461583))) w p lw 2 lt 88 ti "position transported"

 set key at graph key_x, graph key_y - 102*key_spacing
plot "+" u (xe(K*(5.7671494851792370894827399752103))):(ye(K*(5.8508053330368499089786382683087))) w p lw 2 lt 89 ti "position transported"

 set key at graph key_x, graph key_y - 103*key_spacing
plot "+" u (xe(K*(6.241316200608983066899781988468))):(ye(K*(0.85269573843993995421186582461814))) w p lw 2 lt 90 ti "position transported"

 set key at graph key_x, graph key_y - 104*key_spacing
plot "+" u (xe(K*(4.5036939231817942896896056481637))):(ye(K*(5.6380871822138090010412270203233))) w p lw 2 lt 91 ti "position transported"

 set key at graph key_x, graph key_y - 105*key_spacing
plot "+" u (xe(K*(6.2413269276343816827079535869416))):(ye(K*(0.85308300477003473627490848230082))) w p lw 2 lt 92 ti "position transported"

 set key at graph key_x, graph key_y - 106*key_spacing
plot "+" u (xe(K*(4.2978864291282699028329261636827))):(ye(K*(5.7594711098338127186480051022954))) w p lw 2 lt 93 ti "position transported"

 set key at graph key_x, graph key_y - 107*key_spacing
plot "+" u (xe(K*(6.2413251626126848847775363537949))):(ye(K*(0.85301901921960943120382125925971))) w p lw 2 lt 94 ti "position transported"

 set key at graph key_x, graph key_y - 108*key_spacing
plot "+" u (xe(K*(4.3296008326334201044005567382555))):(ye(K*(5.7361689130848851903010654496029))) w p lw 2 lt 95 ti "position transported"

 set key at graph key_x, graph key_y - 109*key_spacing
plot "+" u (xe(K*(6.2413122741445850039099241257645))):(ye(K*(0.85255493703113993664288727813982))) w p lw 2 lt 96 ti "position transported"

 set key at graph key_x, graph key_y - 110*key_spacing
plot "+" u (xe(K*(4.9692273125335759687004610896111))):(ye(K*(5.5419986786014767687902349280193))) w p lw 2 lt 97 ti "position transported"

 set key at graph key_x, graph key_y - 111*key_spacing
plot "+" u (xe(K*(6.2413104234656042734741276944987))):(ye(K*(0.85248874648655681429687547279173))) w p lw 2 lt 98 ti "position transported"

 set key at graph key_x, graph key_y - 112*key_spacing
plot "+" u (xe(K*(5.018312023725290060838233330287))):(ye(K*(5.5424960542529602136596622585785))) w p lw 2 lt 99 ti "position transported"

 set key at graph key_x, graph key_y - 113*key_spacing
plot "+" u (xe(K*(6.2413110864333463112529898353387))):(ye(K*(0.8525124451338251807541723792383))) w p lw 2 lt 100 ti "position transported"

 set key at graph key_x, graph key_y - 114*key_spacing
plot "+" u (xe(K*(4.1296769458740758551584804081358))):(ye(K*(5.921987962782321979204880335601))) w p lw 2 lt 101 ti "position transported"

 set key at graph key_x, graph key_y - 115*key_spacing
plot "+" u (xe(K*(6.2413078420392666956217908591498))):(ye(K*(0.85239660514421888848346497979946))) w p lw 2 lt 102 ti "position transported"

 set key at graph key_x, graph key_y - 116*key_spacing
plot "+" u (xe(K*(5.7570789542687812456733809085563))):(ye(K*(5.8407848564671063229525316273794))) w p lw 2 lt 103 ti "position transported"

 set key at graph key_x, graph key_y - 117*key_spacing
plot "+" u (xe(K*(6.2408838630452798668102332158014))):(ye(K*(0.85280817175382661599059019863489))) w p lw 2 lt 104 ti "position transported"

 set key at graph key_x, graph key_y - 118*key_spacing
plot "+" u (xe(K*(4.5084289635002798846130644960795))):(ye(K*(5.6637079567617441000493272440508))) w p lw 2 lt 105 ti "position transported"

 set key at graph key_x, graph key_y - 119*key_spacing
plot "+" u (xe(K*(6.2408844793755582358585343172308))):(ye(K*(0.85332121011316208747388145638979))) w p lw 2 lt 106 ti "position transported"

 set key at graph key_x, graph key_y - 120*key_spacing
plot "+" u (xe(K*(4.3004797641043204237121244659647))):(ye(K*(5.7959970930624375995421360130422))) w p lw 2 lt 107 ti "position transported"

 set key at graph key_x, graph key_y - 121*key_spacing
plot "+" u (xe(K*(6.240884402507425932071782881394))):(ye(K*(0.8532463093274647025765489161131))) w p lw 2 lt 108 ti "position transported"

 set key at graph key_x, graph key_y - 122*key_spacing
plot "+" u (xe(K*(4.3315850117524838935878506163135))):(ye(K*(5.7712558927638770711610050057061))) w p lw 2 lt 109 ti "position transported"

 set key at graph key_x, graph key_y - 123*key_spacing
plot "+" u (xe(K*(6.2408835355080327644827775657177))):(ye(K*(0.85258889645469837503810595080722))) w p lw 2 lt 110 ti "position transported"

 set key at graph key_x, graph key_y - 124*key_spacing
plot "+" u (xe(K*(4.9674328610419387075580743839964))):(ye(K*(5.5576356734678533655369392363355))) w p lw 2 lt 111 ti "position transported"

 set key at graph key_x, graph key_y - 125*key_spacing
plot "+" u (xe(K*(6.2408834060884554872927765245549))):(ye(K*(0.852508670950030800206320691359))) w p lw 2 lt 112 ti "position transported"

 set key at graph key_x, graph key_y - 126*key_spacing
plot "+" u (xe(K*(5.016571153239482327990117482841))):(ye(K*(5.5571937745106687600582517916337))) w p lw 2 lt 113 ti "position transported"

 set key at graph key_x, graph key_y - 127*key_spacing
plot "+" u (xe(K*(6.2408829200204234410875869798474))):(ye(K*(0.85223179611482291484492179733934))) w p lw 2 lt 114 ti "position transported"

 set key at graph key_x, graph key_y - 128*key_spacing
plot "+" u (xe(K*(4.1777831371846891883592434169259))):(ye(K*(5.9164358462997928000959291239269))) w p lw 2 lt 115 ti "position transported"

 set key at graph key_x, graph key_y - 129*key_spacing
plot "+" u (xe(K*(6.2408829037431710062833190022502))):(ye(K*(0.85222308866675478000729526684154))) w p lw 2 lt 116 ti "position transported"

 set key at graph key_x, graph key_y - 130*key_spacing
plot "+" u (xe(K*(5.7570045992649756527725912746973))):(ye(K*(5.8410446097749542104793363250792))) w p lw 2 lt 117 ti "position transported"

 set key at graph key_x, graph key_y - 131*key_spacing
plot "+" u (xe(K*(6.242725383955368023691789858276))):(ye(K*(0.85232816672492039966613219803548))) w p lw 2 lt 118 ti "position transported"

 set key at graph key_x, graph key_y - 132*key_spacing
plot "+" u (xe(K*(4.4469202148376547611974274332169))):(ye(K*(5.0625205717174264208324530045502))) w p lw 2 lt 119 ti "position transported"

 set key at graph key_x, graph key_y - 133*key_spacing
plot "+" u (xe(K*(6.2425964795932209483453334541991))):(ye(K*(0.85236186023585780446865101112053))) w p lw 2 lt 120 ti "position transported"

 set key at graph key_x, graph key_y - 134*key_spacing
plot "+" u (xe(K*(4.4447302607073835289952512539458))):(ye(K*(5.1204626652168743206061662931461))) w p lw 2 lt 121 ti "position transported"

 set key at graph key_x, graph key_y - 135*key_spacing
plot "+" u (xe(K*(6.2420961769841527555513494007755))):(ye(K*(0.8524924975253674874764442392916))) w p lw 2 lt 122 ti "position transported"

 set key at graph key_x, graph key_y - 136*key_spacing
plot "+" u (xe(K*(0.98602227014700483120890339705511))):(ye(K*(5.4183252433003037396019863081165))) w p lw 2 lt 123 ti "position transported"

 set key at graph key_x, graph key_y - 137*key_spacing
plot "+" u (xe(K*(6.2422870494104589766948265605606))):(ye(K*(0.85244268265632550107824272345169))) w p lw 2 lt 124 ti "position transported"

 set key at graph key_x, graph key_y - 138*key_spacing
plot "+" u (xe(K*(0.99678079196364133274244068161352))):(ye(K*(5.3308612873855985014870384475216))) w p lw 2 lt 125 ti "position transported"

 set key at graph key_x, graph key_y - 139*key_spacing
plot "+" u (xe(K*(6.241512754744814372998007456772))):(ye(K*(0.85264457034907326082873169070808))) w p lw 2 lt 126 ti "position transported"

 set key at graph key_x, graph key_y - 140*key_spacing
plot "+" u (xe(K*(4.5658485752871422747034557687584))):(ye(K*(5.9313553850132336719980230554938))) w p lw 2 lt 127 ti "position transported"

 set key at graph key_x, graph key_y - 141*key_spacing
plot "+" u (xe(K*(6.2417587876627722565103795204777))):(ye(K*(0.85258047547844861835386609527632))) w p lw 2 lt 128 ti "position transported"

 set key at graph key_x, graph key_y - 142*key_spacing
plot "+" u (xe(K*(0.99139124435891290421096755380859))):(ye(K*(5.3768847630044387386760718072765))) w p lw 2 lt 129 ti "position transported"

 set key at graph key_x, graph key_y - 143*key_spacing
plot "+" u (xe(K*(6.2441727088890210950467007933185))):(ye(K*(0.85154384224326007402083860142739))) w p lw 2 lt 130 ti "position transported"

 set key at graph key_x, graph key_y - 144*key_spacing
plot "+" u (xe(K*(0.51079143455186404310097714187577))):(ye(K*(5.1529371858202956957484275335446))) w p lw 2 lt 131 ti "position transported"

 set key at graph key_x, graph key_y - 145*key_spacing
plot "+" u (xe(K*(6.2424779764858566721841270918958))):(ye(K*(0.85246192326204361933150721597485))) w p lw 2 lt 132 ti "position transported"

 set key at graph key_x, graph key_y - 146*key_spacing
plot "+" u (xe(K*(0.26765795569652989227549255701888))):(ye(K*(4.9544599469591323881445532606449))) w p lw 2 lt 133 ti "position transported"

 set key at graph key_x, graph key_y - 147*key_spacing
plot "+" u (xe(K*(6.2425354556597918431748439616058))):(ye(K*(0.85243085638448323759774893915164))) w p lw 2 lt 134 ti "position transported"

 set key at graph key_x, graph key_y - 148*key_spacing
plot "+" u (xe(K*(0.26133836070046068122962878987892))):(ye(K*(4.9519987880889431153264013119042))) w p lw 2 lt 135 ti "position transported"

 set key at graph key_x, graph key_y - 149*key_spacing
plot "+" u (xe(K*(6.2417960580163294181943456351291))):(ye(K*(0.85283011283369214439176175801549))) w p lw 2 lt 136 ti "position transported"

 set key at graph key_x, graph key_y - 150*key_spacing
plot "+" u (xe(K*(4.3113555785883814763792543089949))):(ye(K*(5.909603254434686370188956061611))) w p lw 2 lt 137 ti "position transported"

 set key at graph key_x, graph key_y - 151*key_spacing
plot "+" u (xe(K*(6.2420436770004572579750856675673))):(ye(K*(0.85269649645318212893840836841264))) w p lw 2 lt 138 ti "position transported"

 set key at graph key_x, graph key_y - 152*key_spacing
plot "+" u (xe(K*(0.55495513691771847231137826383929))):(ye(K*(5.2571465612771692832438930054195))) w p lw 2 lt 139 ti "position transported"

 set key at graph key_x, graph key_y - 153*key_spacing
plot "+" u (xe(K*(6.2423894808147837309775241010357))):(ye(K*(0.85246901945530717537025111596449))) w p lw 2 lt 140 ti "position transported"

 set key at graph key_x, graph key_y - 154*key_spacing
plot "+" u (xe(K*(0.2332351122664621523306038852752))):(ye(K*(4.9506087724832337215730149182491))) w p lw 2 lt 141 ti "position transported"

 set key at graph key_x, graph key_y - 155*key_spacing
plot "+" u (xe(K*(6.2424558862184413854379272379447))):(ye(K*(0.85243464942458357924692791129928))) w p lw 2 lt 142 ti "position transported"

 set key at graph key_x, graph key_y - 156*key_spacing
plot "+" u (xe(K*(0.2279254206365828039348997435809))):(ye(K*(4.9488149462801764855157671263441))) w p lw 2 lt 143 ti "position transported"

 set key at graph key_x, graph key_y - 157*key_spacing
plot "+" u (xe(K*(6.241749762337389206834359356435))):(ye(K*(0.852799797953838534247950065037))) w p lw 2 lt 144 ti "position transported"

 set key at graph key_x, graph key_y - 158*key_spacing
plot "+" u (xe(K*(4.3436561683302628011915658134967))):(ye(K*(5.9098305570867237790366743865889))) w p lw 2 lt 145 ti "position transported"

 set key at graph key_x, graph key_y - 159*key_spacing
plot "+" u (xe(K*(6.2419910853458624444556335220113))):(ye(K*(0.85267508674748515584695951474714))) w p lw 2 lt 146 ti "position transported"

 set key at graph key_x, graph key_y - 160*key_spacing
plot "+" u (xe(K*(0.55935091879118936653014770854497))):(ye(K*(5.2575457564256513620648547657765))) w p lw 2 lt 147 ti "position transported"

 set key at graph key_x, graph key_y - 161*key_spacing
plot "+" u (xe(K*(6.2433477544973703388109242951032))):(ye(K*(0.85239187282860373606752091291128))) w p lw 2 lt 148 ti "position transported"

 set key at graph key_x, graph key_y - 162*key_spacing
plot "+" u (xe(K*(0.13240012790999766689736816260847))):(ye(K*(4.9416683139923511802749089838471))) w p lw 2 lt 149 ti "position transported"

 set key at graph key_x, graph key_y - 163*key_spacing
plot "+" u (xe(K*(6.2413690570683986180711144697852))):(ye(K*(0.85255042928256252743324239418143))) w p lw 2 lt 150 ti "position transported"

 set key at graph key_x, graph key_y - 164*key_spacing
plot "+" u (xe(K*(4.9951449286814479933127586264163))):(ye(K*(6.0790724325706362307641938969027))) w p lw 2 lt 151 ti "position transported"

 set key at graph key_x, graph key_y - 165*key_spacing
plot "+" u (xe(K*(6.241633474448553542401896265801))):(ye(K*(0.85252940721918646360677485063206))) w p lw 2 lt 152 ti "position transported"

 set key at graph key_x, graph key_y - 166*key_spacing
plot "+" u (xe(K*(0.97006816710239329726306323209428))):(ye(K*(5.3658545835390594191949276137166))) w p lw 2 lt 153 ti "position transported"

 set key at graph key_x, graph key_y - 167*key_spacing
plot "+" u (xe(K*(6.2412772871956700981854737619869))):(ye(K*(0.85249029732285319660434197430732))) w p lw 2 lt 154 ti "position transported"

 set key at graph key_x, graph key_y - 168*key_spacing
plot "+" u (xe(K*(5.0489145583931875904681874089874))):(ye(K*(6.1085221018444801899249796406366))) w p lw 2 lt 155 ti "position transported"

 set key at graph key_x, graph key_y - 169*key_spacing
plot "+" u (xe(K*(6.2415107070892883456281197140925))):(ye(K*(0.85247935598192470241230012106826))) w p lw 2 lt 156 ti "position transported"

 set key at graph key_x, graph key_y - 170*key_spacing
plot "+" u (xe(K*(1.0192607277952769884166173142148))):(ye(K*(5.3925528178611479290793795371428))) w p lw 2 lt 157 ti "position transported"

 set key at graph key_x, graph key_y - 171*key_spacing
plot "+" u (xe(K*(6.2408477011297565084646521427203))):(ye(K*(0.85220870335569676168319119824446))) w p lw 2 lt 158 ti "position transported"

 set key at graph key_x, graph key_y - 172*key_spacing
plot "+" u (xe(K*(5.8709002118151243365673508378677))):(ye(K*(0.54575703055201896241044323687674))) w p lw 2 lt 159 ti "position transported"

	
 set key at graph key_x, graph key_y - 1*key_spacing
plot [0.:2.*pi] xe(K*lambda_cea(t, 6.0016343222782575494989032449666, 0.11276663835826482296109674052786, 1.1418435881749906535276295471704)), ye(K*phi_cea(t, 6.0016343222782575494989032449666, 0.11276663835826482296109674052786, 1.1418435881749906535276295471704)) smo csp dashtype 1 lt 1 ti "moon 2021-06-21 21:39:32 TAI, Sight was taken at BGC"

 set key at graph key_x, graph key_y - 2*key_spacing
plot [0.:2.*pi] xe(K*lambda_cea(t, 6.0009779746737130778910795925185, 0.15713928023821471802179416954459, 1.1482512962972457604138298847829)), ye(K*phi_cea(t, 6.0009779746737130778910795925185, 0.15713928023821471802179416954459, 1.1482512962972457604138298847829)) smo csp dashtype 2 lt 2 ti "moon 2021-06-21 21:50:05.99 TAI, Sight was taken at BGC"

 set key at graph key_x, graph key_y - 3*key_spacing
plot [0.:2.*pi] xe(K*lambda_cea(t, 0.33300635349119828143571453438199, 1.0139375075339236431659628578927, 0.98485670597599828113288822351024)), ye(K*phi_cea(t, 0.33300635349119828143571453438199, 1.0139375075339236431659628578927, 0.98485670597599828113288822351024)) smo csp dashtype 3 lt 3 ti "arcturus 2021-07-06 23:08:53.82 TAI, Sight was taken at BGC"

 set key at graph key_x, graph key_y - 4*key_spacing
plot [0.:2.*pi] xe(K*lambda_cea(t, 0.39159131251279977181667391050723, 4.9428640643130146159478499612305, 1.1020586613425791266962505687843)), ye(K*phi_cea(t, 0.39159131251279977181667391050723, 4.9428640643130146159478499612305, 1.1020586613425791266962505687843)) smo csp dashtype 4 lt 4 ti "sun 2021-07-08 06:58:23.83 TAI, Sight was taken at MP"

 set key at graph key_x, graph key_y - 5*key_spacing
plot [0.:2.*pi] xe(K*lambda_cea(t, 0.35951509093697581187498713006789, 4.9806932986108636285393913567532, 1.1007526311195947599230748892296)), ye(K*phi_cea(t, 0.35951509093697581187498713006789, 4.9806932986108636285393913567532, 1.1007526311195947599230748892296)) smo csp dashtype 5 lt 5 ti "sun 2021-07-20 07:08:21.37 TAI, Sight was taken at MP"

 set key at graph key_x, graph key_y - 6*key_spacing
plot [0.:2.*pi] xe(K*lambda_cea(t, 0.35950314151211570923294402746251, 5.0033600725495439576206990750507, 1.0855637357623084682245462317951)), ye(K*phi_cea(t, 0.35950314151211570923294402746251, 5.0033600725495439576206990750507, 1.0855637357623084682245462317951)) smo csp dashtype 6 lt 6 ti "sun 2021-07-20 07:13:33.07 TAI, Sight was taken at MP"

 set key at graph key_x, graph key_y - 7*key_spacing
plot [0.:2.*pi] xe(K*lambda_cea(t, 5.9625679024251265758493900648318, 5.8689068280786935716264451912139, 1.219306826232512630525661734282)), ye(K*phi_cea(t, 5.9625679024251265758493900648318, 5.8689068280786935716264451912139, 1.219306826232512630525661734282)) smo csp dashtype 7 lt 7 ti "saturn 2021-07-29 22:46:41.54 TAI, Sight was taken at BGC"

 set key at graph key_x, graph key_y - 8*key_spacing
plot [0.:2.*pi] xe(K*lambda_cea(t, 6.063554151690781601757862517843, 5.5859356926821757127754608518444, 1.2188204414339045555948359833565)), ye(K*phi_cea(t, 6.063554151690781601757862517843, 5.5859356926821757127754608518444, 1.2188204414339045555948359833565)) smo csp dashtype 8 lt 8 ti "jupiter 2021-07-29 22:58:47.73 TAI, Sight taken at BGC"

 set key at graph key_x, graph key_y - 9*key_spacing
plot [0.:2.*pi] xe(K*lambda_cea(t, 6.0635515019633130506804263859522, 5.6082477929716620934641468920745, 1.2095934061088866595667923320434)), ye(K*phi_cea(t, 6.0635515019633130506804263859522, 5.6082477929716620934641468920745, 1.2095934061088866595667923320434)) smo csp dashtype 9 lt 9 ti "jupiter 2021-07-29 23:03:53.62 TAI, Sight was taken at BGC"

 set key at graph key_x, graph key_y - 10*key_spacing
plot [0.:2.*pi] xe(K*lambda_cea(t, 6.0359041205882091318812854296993, 6.1307955025492351097682330873795, 1.104199390670579816742247203365)), ye(K*phi_cea(t, 6.0359041205882091318812854296993, 6.1307955025492351097682330873795, 1.104199390670579816742247203365)) smo csp dashtype 10 lt 10 ti "jupiter 2021-09-02 22:28:52.94 TAI, Sight was taken at MP"

 set key at graph key_x, graph key_y - 11*key_spacing
plot [0.:2.*pi] xe(K*lambda_cea(t, 6.0358988320332684907043585553765, 6.1760020468963015005670058599208, 1.1013011667928371828395484044449)), ye(K*phi_cea(t, 6.0358988320332684907043585553765, 6.1760020468963015005670058599208, 1.1013011667928371828395484044449)) smo csp dashtype 11 lt 11 ti "jupiter 2021-09-02 22:39:12.67 TAI, Sight was taken at MP"

 set key at graph key_x, graph key_y - 12*key_spacing
plot [0.:1.4002153842380051784743955067825 - epsilon] xe(K*lambda_cea(t, 0.80326138418276193942091367716785, 4.3174550985202042596711180522107, 1.1768564601383246781551861204207)), ye(K*phi_cea(t, 0.80326138418276193942091367716785, 4.3174550985202042596711180522107, 1.1768564601383246781551861204207)) smo csp dashtype 12 lt 12 ti "capella 2021-09-03 22:55:03.877 TAI, Sight was taken at MP"
plot [1.4002153842380051784743955067825 + epsilon:2.*pi] xe(K*lambda_cea(t, 0.80326138418276193942091367716785, 4.3174550985202042596711180522107, 1.1768564601383246781551861204207)), ye(K*phi_cea(t, 0.80326138418276193942091367716785, 4.3174550985202042596711180522107, 1.1768564601383246781551861204207)) smo csp dashtype 12 lt 12 noti 

 set key at graph key_x, graph key_y - 13*key_spacing
plot [0.:2.*pi] xe(K*lambda_cea(t, 6.2345210250870328749783766397741, 0.41282289834064428424298398567771, 0.98365690259210991630567377796979)), ye(K*phi_cea(t, 6.2345210250870328749783766397741, 0.41282289834064428424298398567771, 0.98365690259210991630567377796979)) smo csp dashtype 13 lt 13 ti "moon 2021-11-14 22:17:44 TAI, Sight was taken at MP"


	x_max_old = GPVAL_X_MAX;

        set print "boundary.txt";
	print "GPVAL_X_MIN = ", GPVAL_X_MIN, "\n", "GPVAL_X_MAX = ", GPVAL_X_MAX, "\n", "GPVAL_Y_MIN = ", GPVAL_Y_MIN, "\n", "GPVAL_Y_MAX = ", GPVAL_Y_MAX, "\n", "minimal longitude = ", label_deg_min_c_lib(lambda_min), "\n", "maximal longitude = ", label_deg_min_c_lib(lambda_max), "\n", "minimal latitude = ", label_deg_min_c_lib(phi_min), "\n", "maximal latitude = ", label_deg_min_c_lib(phi_max), "\n";
	unset print;
	system("chmod 777 boundary.txt");

	}


    	pause 1e-1      # waiting time in seconds
}
